{
  "plugins": ["jsdoc"],
  "extends": ["eslint:recommended", "plugin:jsdoc/recommended-error"],
  "env": {
    "browser": true,
    "es6": true
  },
  "rules": {
    "indent": "off",
    "no-mixed-spaces-and-tabs": "off",
    "max-len": [
      "error",
      {
	"tabWidth": 8,
	"ignoreStrings": true,
	"ignoreTemplateLiterals": true,
	"ignorePattern": "TODO|FIXME|https?://"
      }
    ],
    "no-var": "error",
    "no-unused-vars": ["error", { "vars": "local", "args": "none" }],
    "linebreak-style": ["error", "unix"],
    "semi": ["error", "always"],
    "func-call-spacing": "error",
    "space-before-function-paren": [
      "error",
      {
	"anonymous": "never",
	"named": "never",
	"asyncArrow": "always"
      }
    ],
    "keyword-spacing": [
      "error",
      { "before": true, "after": true }
    ],
    "no-confusing-arrow": "error",
    "arrow-body-style": ["error", "as-needed"],
    "curly": "error",
    "jsdoc/require-jsdoc": [
      "error",
      {
	"minLineCount": 25,
	"require": {
	  "ClassDeclaration": true,
	  "FunctionDeclaration": true,
	  "MethodDefinition": true
	}
      }
    ],
    "jsdoc/multiline-blocks": [
      "error",
      {
	"noZeroLineText": false
      }
    ],
    "jsdoc/require-param-description": "off",
    "jsdoc/newline-after-description": "off",
    // rules I *almost* like :(
    "no-redeclare": "off" // interferes with "exports" via script tags in same html file, see globals below
    //"arrow-parens": ["error", "as-needed"], // conflicts with no-confusing-arrow
    //"prefer-template": "error", // when it's just one literal string concatenated with some other expression(s), I prefer using +, but there's no way to tell this rule that
    //"brace-style": ["error", "1tbs"], // this breaks when I break long conditions in an if across multiple lines
  },
  "globals": {
    // browser features
    "webkitAudioContext": "readonly",
    // vars exported by *.js and shared via xm-player.html script tags (SMDH)
    // xm-player.js
    "actx": "writable",
    "computePlaybackRate": "readonly",
    "highlightAndCenterRow": "readonly",
    "instrumentsDiv": "writable",
    "maxVolume": "readonly",
    "patternOrderDiv": "writable",
    "recordingSpinner": "writable",
    "patternsDiv": "writable",
    "rowHighlight": "writable",
    "showPatternsInput": "writable",
    "songTable": "writable",
    "stopPlaying": "readonly",
    "stopPlease": "writable",
    "xm": "writable",
    // xm.js
    "XM": "readonly",
    // binary-file-reader.js
    "BinaryFileReader": "readonly",
    // channel.js
    "afterDelay": "readonly",
    "Channel": "readonly",
    "sampleDataToBufferSource": "readonly",
    // note-tooltips.js
    "noteTooltips": "readonly",
    // wav.js
    "audioBufferToWavBlob": "readonly"
  },
  "settings": {
    "jsdoc": {
      "tagNamePreference": {
	"returns": "return"
      },
      "preferredTypes": {
	"object": "object" // allow both Object and object, the former conventionally meaning an object whose constructor is exactly Object
      }
    }
  }
}
